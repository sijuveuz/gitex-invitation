# Generated by Django 5.2.7 on 2025-10-14 04:51

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BulkUploadJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('uploaded_file', models.FileField(upload_to='bulk_uploads/')),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('preview_ready', 'Preview Ready'), ('confirmed', 'Confirmed'), ('sending', 'Sending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=30)),
                ('total_count', models.PositiveIntegerField(default=0)),
                ('valid_count', models.PositiveIntegerField(default=0)),
                ('invalid_count', models.PositiveIntegerField(default=0)),
                ('preview_data', models.JSONField(blank=True, default=list)),
                ('sample_errors', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulk_jobs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_name', models.CharField(max_length=255)),
                ('guest_email', models.EmailField(max_length=254)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('personal_message', models.TextField(blank=True, null=True)),
                ('expire_date', models.DateField()),
                ('source_type', models.CharField(choices=[('personal', 'Personalized'), ('bulk', 'Bulk Upload'), ('link', 'Generated Link')], max_length=20)),
                ('link_code', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('usage_limit', models.PositiveIntegerField(default=1)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('invitation_url', models.URLField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('registered_at', models.DateTimeField(blank=True, null=True)),
                ('registered', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL)),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='invitations.tickettype')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvitationLinkUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guest_name', models.CharField(max_length=255)),
                ('guest_email', models.EmailField(max_length=254)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('registered', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='invitations.invitation')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('link', 'guest_email')},
            },
        ),
        migrations.CreateModel(
            name='InvitationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_invitations', models.PositiveIntegerField(default=5000)),
                ('generated_invitations', models.PositiveIntegerField(default=0)),
                ('remaining_invitations', models.PositiveIntegerField(default=5000)),
                ('registered_visitors', models.PositiveIntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invitation_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='invitations_user_id_6d4a26_idx'), models.Index(fields=['remaining_invitations'], name='invitations_remaini_9a5423_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['user', 'guest_email'], name='invitations_user_id_b156db_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['user', 'source_type'], name='invitations_user_id_3dae0d_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['link_code'], name='invitations_link_co_d95a5b_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['status'], name='invitations_status_47519c_idx'),
        ),
        migrations.AddIndex(
            model_name='invitation',
            index=models.Index(fields=['expire_date'], name='invitations_expire__9026ce_idx'),
        ),
        migrations.AddConstraint(
            model_name='invitation',
            constraint=models.UniqueConstraint(condition=models.Q(('guest_email__isnull', True), _negated=True), fields=('user', 'guest_email', 'ticket_type'), name='unique_invite_per_guest_per_ticket'),
        ),
    ]
